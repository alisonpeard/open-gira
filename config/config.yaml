# Input data and output locations
output_dir: 'results'


#####################################
### FLOODING / TRANSPORT WORKFLOW ###
#####################################


## Aqueduct Analysis ##
# This should be a named list of files that specify hazard raster files
# to retrieve using wget -i
hazard_datasets:
  aqueduct-coast: 'https://raw.githubusercontent.com/mjaquiery/aqueduct/main/tiffs.txt'
  #aqueduct-coast: 'config/hazard_resource_locations/aqueduct-coast_wtsub_perc95.txt'
  #aqueduct-river: 'config/hazard_resource_locations/aqueduct-river_rcp4p5_MIROC-ESM-CHEM_2030_tifs.txt'  # subset of aqueduct_tifs.txt
  aqueduct-river: 'config/hazard_resource_locations/aqueduct-river.txt'

# TODO: have hazards as instances of some kind of struct rather than several dicts?
hazard_types:
  aqueduct-coast: 'flood'
  aqueduct-river: 'flood'

# OSM datasets in PBF format, principally from: https://download.geofabrik.de/ #
infrastructure_datasets:
  # whole planet file
  planet-latest: 'https://planet.osm.org/pbf/planet-latest.osm.pbf'
  # 'continent' extracts
  africa-latest: 'http://download.geofabrik.de/africa-latest.osm.pbf'
  asia-latest: 'http://download.geofabrik.de/asia-latest.osm.pbf'
  australia-oceania-latest: 'http://download.geofabrik.de/australia-oceania-latest.osm.pbf'
  central-america-latest: 'https://download.geofabrik.de/central-america-latest.osm.pbf'
  europe-latest: 'https://download.geofabrik.de/europe-latest.osm.pbf'
  north-america-latest: 'http://download.geofabrik.de/north-america-latest.osm.pbf'
  south-america-latest: 'http://download.geofabrik.de/south-america-latest.osm.pbf'
  # country extracts
  djibouti-latest: 'https://download.geofabrik.de/africa/djibouti-latest.osm.pbf'
  egypt-latest: 'http://download.geofabrik.de/africa/egypt-latest.osm.pbf'
  great-britain-latest: 'http://download.geofabrik.de/europe/great-britain-latest.osm.pbf'
  kenya-latest: 'http://download.geofabrik.de/africa/kenya-latest.osm.pbf'
  tanzania-latest: 'https://download.geofabrik.de/africa/tanzania-latest.osm.pbf'
  wales-latest: 'https://download.geofabrik.de/europe/great-britain/wales-latest.osm.pbf'
  # small extract for testing purposes
  tanzania-mini: 'https://raw.githubusercontent.com/mjaquiery/aqueduct/main/tanzania-mini.osm.pbf'

# these files contain osmium filter expressions for selecting relevant nodes, ways and relations from .osm.pbf files
# the keys in the mapping, i.e. 'road' and 'rail' will be used to create FILTER_SLUG in rules
network_filters:
  road: 'config/osm_filters/road-tertiary.txt'
  rail: 'config/osm_filters/rail.txt'

# OSM tag data to retain on selected features, typically for usage in network annotation/analysis
# N.B. feature SELECTION is done with the expressions pointed to from network_filters
keep_tags:
  road: ['highway', 'surface', 'bridge', 'maxspeed', 'lanes']
  rail: ['railway', 'bridge', 'name']

# Number of slices to cut dataset into -- must be a square number
slice_count: 1024

# CRS OSM uses
osm_epsg: 4326

transport:
  # if the following data can be sourced/hosted online, remove these config entries and download instead
  rehabilitation_costs_path: 'bundled_data/transport/rehabilitation.xlsx'
  tariff_costs_path: 'bundled_data/transport/tariffs.xlsx'
  speeds_path: 'bundled_data/transport/speeds.xlsx'
  road:
    # road network specific configuration
    default_shoulder_width_metres: 1.5
    default_lane_width_metres: 3.25
    # fudge factor to tune flow allocation
    flow_cost_time_factor: 0.49
  rail:
    flow_cost_time_factor: 0.49

direct_damages:
  # assets to calculate direct damages for
  # use empty list to process direct damages for all implemented asset types
  asset_types: [
    'road_paved',
    'road_unpaved',
    'rail_railway',
  ]
  # CSV damage fraction as a function of hazard intensity
  # per asset type, per hazard (flood, storm, etc.)
  curves_dir: 'bundled_data/damage_curves/'


###############################
### STORM / ENERGY WORKFLOW ###
###############################


# Options for exposure tif file generation
exposure_tifs:
  # When generating exposure summaries, filter by cells with at >= exposure_threshold m of flooding
  exposure_threshold: 0.5
  # Used when scaling raster files, values < 1 will downsample
  scaling_factor: 0.1
  # Used to determine how resampling occurs. Valid values are in rasterio.enums.Resampling.
  resampling_mode: 'bilinear'
  # Options for plotting
  plot:
    # Keyword arguments for raster plotting
    raster:
      # Colour mapping to use for raster data
      cmap: 'Reds'

## STORM Power Network Analysis

# some of the rules are parallelised with multiprocessing
# this is useful when running only a single area, but against many storms
# works for annotate_targets.py, estimate_wind_fields.py and grid_disruption.py
process_parallelism: True

# Failure thresholds m/s. These values are the thresholds at which the network assets
# are expected to fail based on available literature.
transmission_windspeed_failure: [20, 35, 50]

# width and height of a square cell or 'box' for power/storms workflow
# dataset-splitting -- must be a factor of 180
box_deg: 5
# wind_deg defines another grid which nests inside the above
# this value must be a factor of box_deg
# wind speed is constant within a square area of sides wind_deg
wind_deg: 0.1  # approx 11km latitude

# whether to plot maximum wind fields and storm track animations for each storm
plot_wind:
    max_speed: True
    # WARNING: plotting the animation is slow.. you probably only ever want it for historic tracks
    animation: False

# Direct damage cost per km (USD) for high voltage lines. 400 000USD suggestion for upper limit
reconstruction_cost_high: 400000

# Direct damage cost per km (USD) for low and medium voltage lines. XXX 000USD suggestion for upper limit
reconstruction_cost_lowmedium: 200000

# Further Configuration #
# Storms will be analysed in batches of this value. Higher value: quicker process. Lower value: better memory. It is recommended to tweak this value dependent on the machine's available memory and/or user requirements (500 is often a good starting value). Note that at below 25, attempts are made to record which files store which data as to only load the relevant wind csv files. This may explain increases/decreases in performance.
storm_batches: 900

# If set to True then wind_extracter will overwrite existing wind files. It is recommended to keep this as False unless changes are made in the wind configuration files/scripts.
wind_rerun: True

# Analysis #
# Percentage of storms to select for geospatial analysis and visualisation. Set to 100 for all
top_select: 100

# Set increasing severity for top_select. True means top_select is the first top_select% of storms in increasing severity (i.e. first one is the least damaging storm). False means the top top_select% worst storms are analysed (i.e. first on is the most damaging storm)
increased_severity_sort: True

# Percentile select
percentile: 99

# Spatial level to aggregate to for geospatial analyses (0 = country and up to 5 inclusive). The higher the number the longer the processing
aggregate_level: 1

# specific storm IDs to use in grid_disruption.py and subsequently
# use an empty list to process all available storms
#specific_storms: ['2017242N16333', '2017260N12310']  # Maria and Irma
specific_storms: []
